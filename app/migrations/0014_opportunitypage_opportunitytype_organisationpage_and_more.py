# Generated by Django 4.1.1 on 2022-09-29 13:14

import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("wagtailcore", "0077_alter_revision_user"),
        ("app", "0013_alter_topichomepage_show_section_navigation_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="OpportunityPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "image_url",
                    models.URLField(
                        blank=True,
                        help_text="If set, this image will be used instead of the featured image.",
                        null=True,
                    ),
                ),
                (
                    "short_summary",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "content",
                    wagtail.fields.StreamField(
                        [
                            ("richtext", wagtail.blocks.RichTextBlock()),
                            (
                                "embeddable_code",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "description",
                                            wagtail.blocks.RichTextBlock(
                                                help_text="(Internal use only.) Explain what this does for other editors. Not displayed on the website.",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "html",
                                            wagtail.blocks.CharBlock(max_length=10000),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "links_gallery",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(max_length=250),
                                        ),
                                        (
                                            "description",
                                            wagtail.blocks.RichTextBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "links",
                                            wagtail.blocks.ListBlock(
                                                wagtail.blocks.StructBlock(
                                                    [
                                                        (
                                                            "page",
                                                            wagtail.blocks.PageChooserBlock(
                                                                required=False
                                                            ),
                                                        ),
                                                        (
                                                            "label",
                                                            wagtail.blocks.CharBlock(
                                                                help_text="Will override the page title if specified",
                                                                max_length=250,
                                                                required=False,
                                                            ),
                                                        ),
                                                        (
                                                            "url",
                                                            wagtail.blocks.URLBlock(
                                                                help_text="Will override the page URL if specified",
                                                                max_length=1000,
                                                                required=False,
                                                            ),
                                                        ),
                                                        (
                                                            "description",
                                                            wagtail.blocks.CharBlock(
                                                                max_length=250,
                                                                required=False,
                                                            ),
                                                        ),
                                                    ]
                                                )
                                            ),
                                        ),
                                        (
                                            "more_info",
                                            wagtail.blocks.StructBlock(
                                                [
                                                    (
                                                        "page",
                                                        wagtail.blocks.PageChooserBlock(
                                                            required=False
                                                        ),
                                                    ),
                                                    (
                                                        "label",
                                                        wagtail.blocks.CharBlock(
                                                            help_text="Will override the page title if specified",
                                                            max_length=250,
                                                            required=False,
                                                        ),
                                                    ),
                                                    (
                                                        "url",
                                                        wagtail.blocks.URLBlock(
                                                            help_text="Will override the page URL if specified",
                                                            max_length=1000,
                                                            required=False,
                                                        ),
                                                    ),
                                                    (
                                                        "description",
                                                        wagtail.blocks.CharBlock(
                                                            max_length=250,
                                                            required=False,
                                                        ),
                                                    ),
                                                ],
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "featured_link",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(
                                                help_text="Will override the page title if specified",
                                                max_length=250,
                                            ),
                                        ),
                                        ("description", wagtail.blocks.RichTextBlock()),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "link_page",
                                            wagtail.blocks.PageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "link_label",
                                            wagtail.blocks.CharBlock(
                                                help_text="Will override the page title if specified",
                                                max_length=250,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "link_url",
                                            wagtail.blocks.URLBlock(
                                                help_text="Will override the page URL if specified",
                                                max_length=1000,
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "simple_link",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "page",
                                            wagtail.blocks.PageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "label",
                                            wagtail.blocks.CharBlock(
                                                help_text="Will override the page title if specified",
                                                max_length=250,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "url",
                                            wagtail.blocks.URLBlock(
                                                help_text="Will override the page URL if specified",
                                                max_length=1000,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "description",
                                            wagtail.blocks.CharBlock(
                                                max_length=250, required=False
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                        ],
                        blank=True,
                        null=True,
                        use_json_field=True,
                    ),
                ),
                (
                    "frontmatter",
                    models.JSONField(
                        blank=True, help_text="Metadata from the legacy site", null=True
                    ),
                ),
                ("deadline_datetime", models.DateTimeField(blank=True, null=True)),
                (
                    "place_of_work",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("apply_form_url", models.URLField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="OpportunityType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, unique=True, verbose_name="name"),
                ),
                (
                    "slug",
                    models.SlugField(
                        allow_unicode=True,
                        max_length=100,
                        unique=True,
                        verbose_name="slug",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OrganisationPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "image_url",
                    models.URLField(
                        blank=True,
                        help_text="If set, this image will be used instead of the featured image.",
                        null=True,
                    ),
                ),
                (
                    "short_summary",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "content",
                    wagtail.fields.StreamField(
                        [
                            ("richtext", wagtail.blocks.RichTextBlock()),
                            (
                                "embeddable_code",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "description",
                                            wagtail.blocks.RichTextBlock(
                                                help_text="(Internal use only.) Explain what this does for other editors. Not displayed on the website.",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "html",
                                            wagtail.blocks.CharBlock(max_length=10000),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "links_gallery",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(max_length=250),
                                        ),
                                        (
                                            "description",
                                            wagtail.blocks.RichTextBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "links",
                                            wagtail.blocks.ListBlock(
                                                wagtail.blocks.StructBlock(
                                                    [
                                                        (
                                                            "page",
                                                            wagtail.blocks.PageChooserBlock(
                                                                required=False
                                                            ),
                                                        ),
                                                        (
                                                            "label",
                                                            wagtail.blocks.CharBlock(
                                                                help_text="Will override the page title if specified",
                                                                max_length=250,
                                                                required=False,
                                                            ),
                                                        ),
                                                        (
                                                            "url",
                                                            wagtail.blocks.URLBlock(
                                                                help_text="Will override the page URL if specified",
                                                                max_length=1000,
                                                                required=False,
                                                            ),
                                                        ),
                                                        (
                                                            "description",
                                                            wagtail.blocks.CharBlock(
                                                                max_length=250,
                                                                required=False,
                                                            ),
                                                        ),
                                                    ]
                                                )
                                            ),
                                        ),
                                        (
                                            "more_info",
                                            wagtail.blocks.StructBlock(
                                                [
                                                    (
                                                        "page",
                                                        wagtail.blocks.PageChooserBlock(
                                                            required=False
                                                        ),
                                                    ),
                                                    (
                                                        "label",
                                                        wagtail.blocks.CharBlock(
                                                            help_text="Will override the page title if specified",
                                                            max_length=250,
                                                            required=False,
                                                        ),
                                                    ),
                                                    (
                                                        "url",
                                                        wagtail.blocks.URLBlock(
                                                            help_text="Will override the page URL if specified",
                                                            max_length=1000,
                                                            required=False,
                                                        ),
                                                    ),
                                                    (
                                                        "description",
                                                        wagtail.blocks.CharBlock(
                                                            max_length=250,
                                                            required=False,
                                                        ),
                                                    ),
                                                ],
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "featured_link",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(
                                                help_text="Will override the page title if specified",
                                                max_length=250,
                                            ),
                                        ),
                                        ("description", wagtail.blocks.RichTextBlock()),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "link_page",
                                            wagtail.blocks.PageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "link_label",
                                            wagtail.blocks.CharBlock(
                                                help_text="Will override the page title if specified",
                                                max_length=250,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "link_url",
                                            wagtail.blocks.URLBlock(
                                                help_text="Will override the page URL if specified",
                                                max_length=1000,
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "simple_link",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "page",
                                            wagtail.blocks.PageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "label",
                                            wagtail.blocks.CharBlock(
                                                help_text="Will override the page title if specified",
                                                max_length=250,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "url",
                                            wagtail.blocks.URLBlock(
                                                help_text="Will override the page URL if specified",
                                                max_length=1000,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "description",
                                            wagtail.blocks.CharBlock(
                                                max_length=250, required=False
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                        ],
                        blank=True,
                        null=True,
                        use_json_field=True,
                    ),
                ),
                (
                    "frontmatter",
                    models.JSONField(
                        blank=True, help_text="Metadata from the legacy site", null=True
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="OrganisationType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, unique=True, verbose_name="name"),
                ),
                (
                    "slug",
                    models.SlugField(
                        allow_unicode=True,
                        max_length=100,
                        unique=True,
                        verbose_name="slug",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PersonType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, unique=True, verbose_name="name"),
                ),
                (
                    "slug",
                    models.SlugField(
                        allow_unicode=True,
                        max_length=100,
                        unique=True,
                        verbose_name="slug",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AlterModelOptions(
            name="eventpage",
            options={"ordering": ["start_datetime"]},
        ),
        migrations.RenameField(
            model_name="eventpage",
            old_name="end_time",
            new_name="end_datetime",
        ),
        migrations.RenameField(
            model_name="eventpage",
            old_name="start_time",
            new_name="start_datetime",
        ),
        migrations.AddField(
            model_name="articlepage",
            name="image_url",
            field=models.URLField(
                blank=True,
                help_text="If set, this image will be used instead of the featured image.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="eventpage",
            name="image_url",
            field=models.URLField(
                blank=True,
                help_text="If set, this image will be used instead of the featured image.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="magazineindexpage",
            name="featured_image",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="app.cmsimage",
            ),
        ),
        migrations.AddField(
            model_name="magazineindexpage",
            name="image_url",
            field=models.URLField(
                blank=True,
                help_text="If set, this image will be used instead of the featured image.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="magazineindexpage",
            name="short_summary",
            field=models.CharField(blank=True, max_length=500, null=True),
        ),
        migrations.AddField(
            model_name="personpage",
            name="image_url",
            field=models.URLField(
                blank=True,
                help_text="If set, this image will be used instead of the featured image.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="projectpage",
            name="image_url",
            field=models.URLField(
                blank=True,
                help_text="If set, this image will be used instead of the featured image.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="staticpage",
            name="image_url",
            field=models.URLField(
                blank=True,
                help_text="If set, this image will be used instead of the featured image.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="topichomepage",
            name="image_url",
            field=models.URLField(
                blank=True,
                help_text="If set, this image will be used instead of the featured image.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="topicpage",
            name="image_url",
            field=models.URLField(
                blank=True,
                help_text="If set, this image will be used instead of the featured image.",
                null=True,
            ),
        ),
        migrations.CreateModel(
            name="TaggedProject",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_object",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tagged_projects",
                        to="app.projectpage",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tagged_projects",
                        to="app.hotosmtag",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TaggedPerson",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_object",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tagged_people",
                        to="app.personpage",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tagged_people",
                        to="app.persontype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TaggedOrganisation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_object",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tagged_organisations",
                        to="app.organisationpage",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tagged_organisations",
                        to="app.organisationtype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TaggedOpportunity",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_object",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tagged_people",
                        to="app.opportunitypage",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tagged_people",
                        to="app.opportunitytype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="organisationpage",
            name="category",
            field=modelcluster.contrib.taggit.ClusterTaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="app.TaggedOrganisation",
                to="app.OrganisationType",
                verbose_name="Tags",
            ),
        ),
        migrations.AddField(
            model_name="organisationpage",
            name="featured_image",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="app.cmsimage",
            ),
        ),
        migrations.AddField(
            model_name="opportunitypage",
            name="category",
            field=modelcluster.contrib.taggit.ClusterTaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="app.TaggedOpportunity",
                to="app.OpportunityType",
                verbose_name="Tags",
            ),
        ),
        migrations.AddField(
            model_name="opportunitypage",
            name="featured_image",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="app.cmsimage",
            ),
        ),
        migrations.CreateModel(
            name="MagazineSection",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "image_url",
                    models.URLField(
                        blank=True,
                        help_text="If set, this image will be used instead of the featured image.",
                        null=True,
                    ),
                ),
                (
                    "short_summary",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "featured_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="app.cmsimage",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="DirectoryPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "image_url",
                    models.URLField(
                        blank=True,
                        help_text="If set, this image will be used instead of the featured image.",
                        null=True,
                    ),
                ),
                (
                    "short_summary",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "featured_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="app.cmsimage",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="ActivationProjectPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "image_url",
                    models.URLField(
                        blank=True,
                        help_text="If set, this image will be used instead of the featured image.",
                        null=True,
                    ),
                ),
                (
                    "short_summary",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "content",
                    wagtail.fields.StreamField(
                        [
                            ("richtext", wagtail.blocks.RichTextBlock()),
                            (
                                "embeddable_code",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "description",
                                            wagtail.blocks.RichTextBlock(
                                                help_text="(Internal use only.) Explain what this does for other editors. Not displayed on the website.",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "html",
                                            wagtail.blocks.CharBlock(max_length=10000),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "links_gallery",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(max_length=250),
                                        ),
                                        (
                                            "description",
                                            wagtail.blocks.RichTextBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "links",
                                            wagtail.blocks.ListBlock(
                                                wagtail.blocks.StructBlock(
                                                    [
                                                        (
                                                            "page",
                                                            wagtail.blocks.PageChooserBlock(
                                                                required=False
                                                            ),
                                                        ),
                                                        (
                                                            "label",
                                                            wagtail.blocks.CharBlock(
                                                                help_text="Will override the page title if specified",
                                                                max_length=250,
                                                                required=False,
                                                            ),
                                                        ),
                                                        (
                                                            "url",
                                                            wagtail.blocks.URLBlock(
                                                                help_text="Will override the page URL if specified",
                                                                max_length=1000,
                                                                required=False,
                                                            ),
                                                        ),
                                                        (
                                                            "description",
                                                            wagtail.blocks.CharBlock(
                                                                max_length=250,
                                                                required=False,
                                                            ),
                                                        ),
                                                    ]
                                                )
                                            ),
                                        ),
                                        (
                                            "more_info",
                                            wagtail.blocks.StructBlock(
                                                [
                                                    (
                                                        "page",
                                                        wagtail.blocks.PageChooserBlock(
                                                            required=False
                                                        ),
                                                    ),
                                                    (
                                                        "label",
                                                        wagtail.blocks.CharBlock(
                                                            help_text="Will override the page title if specified",
                                                            max_length=250,
                                                            required=False,
                                                        ),
                                                    ),
                                                    (
                                                        "url",
                                                        wagtail.blocks.URLBlock(
                                                            help_text="Will override the page URL if specified",
                                                            max_length=1000,
                                                            required=False,
                                                        ),
                                                    ),
                                                    (
                                                        "description",
                                                        wagtail.blocks.CharBlock(
                                                            max_length=250,
                                                            required=False,
                                                        ),
                                                    ),
                                                ],
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "featured_link",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(
                                                help_text="Will override the page title if specified",
                                                max_length=250,
                                            ),
                                        ),
                                        ("description", wagtail.blocks.RichTextBlock()),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "link_page",
                                            wagtail.blocks.PageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "link_label",
                                            wagtail.blocks.CharBlock(
                                                help_text="Will override the page title if specified",
                                                max_length=250,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "link_url",
                                            wagtail.blocks.URLBlock(
                                                help_text="Will override the page URL if specified",
                                                max_length=1000,
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "simple_link",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "page",
                                            wagtail.blocks.PageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "label",
                                            wagtail.blocks.CharBlock(
                                                help_text="Will override the page title if specified",
                                                max_length=250,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "url",
                                            wagtail.blocks.URLBlock(
                                                help_text="Will override the page URL if specified",
                                                max_length=1000,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "description",
                                            wagtail.blocks.CharBlock(
                                                max_length=250, required=False
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                        ],
                        blank=True,
                        null=True,
                        use_json_field=True,
                    ),
                ),
                (
                    "frontmatter",
                    models.JSONField(
                        blank=True, help_text="Metadata from the legacy site", null=True
                    ),
                ),
                (
                    "featured_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="app.cmsimage",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="ActivationIndexPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "image_url",
                    models.URLField(
                        blank=True,
                        help_text="If set, this image will be used instead of the featured image.",
                        null=True,
                    ),
                ),
                (
                    "short_summary",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "featured_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="app.cmsimage",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.AddField(
            model_name="personpage",
            name="category",
            field=modelcluster.contrib.taggit.ClusterTaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="app.TaggedPerson",
                to="app.PersonType",
                verbose_name="Tags",
            ),
        ),
        migrations.AddField(
            model_name="projectpage",
            name="tags",
            field=modelcluster.contrib.taggit.ClusterTaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="app.TaggedProject",
                to="app.HOTOSMTag",
                verbose_name="Tags",
            ),
        ),
    ]
